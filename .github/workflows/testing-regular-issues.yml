# This is a basic workflow to help you get started with Actions

name: Testing regular issues

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  regular:
    strategy:
      matrix:
        os: [ macos, ubuntu, windows]
      fail-fast: false # Allows to see results from other combinations
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - name: curl remote file output
        id: read_recent
        run: |
          echo "ISSUE_NUMBER=sources-for-download/regular-issues.txt" >> $GITHUB_ENV
        shell: bash
      - run: |
          echo "ISSUE_MINUS_ONE=$((${{ env.ISSUE_NUMBER }}-1))" >> $GITHUB_ENV
          echo "ISSUE_MINUS_FIVE=$((${{ env.ISSUE_NUMBER }}-5))" >> $GITHUB_ENV
          echo "ISSUE_MINUS_SIX=$((${{ env.ISSUE_NUMBER }}-6))" >> $GITHUB_ENV
        shell: bash

      - name: Set OS-specific variables for Windows
        if: matrix.os == 'windows'
        run: |
          echo "OS_PATH=windows" >> $GITHUB_ENV
          echo "OS_FILE_EXTENSION=ps1" >> $GITHUB_ENV
        shell: bash

      - name: Set OS-specific variables for macOS and Ubuntu
        if: matrix.os != 'windows'
        run: |
          echo "OS_PATH=linux_mac" >> $GITHUB_ENV
          echo "OS_FILE_EXTENSION=sh" >> $GITHUB_ENV
        shell: bash

      - name: print out vars
        id: printOutVars
        shell: bash
        run: env
      - name: test echo
        run: |
          echo ${{ env.OS_PATH }}
          echo ${{ env.OS_FILE_EXTENSION }}
        shell: bash
      - name: Download Issues with end limit
        id: normalIssuesWithEndLimit
        run: ./${{ env.OS_PATH }}/magpi-issue-downloader.${{ env.OS_FILE_EXTENSION }} -l 2

      - name: Download Issues with start limit
        id: normalIssuesWithStartLimit
        run: ./${{ env.OS_PATH }}/magpi-issue-downloader.${{ env.OS_FILE_EXTENSION }} -f $((${{ env.ISSUE_NUMBER }}-1))

      - name: Download Issues with start and end limit
        id: normalIssuesWithRange
        run: ./${{ env.OS_PATH }}/magpi-issue-downloader.${{ env.OS_FILE_EXTENSION }} -f ${{ env.ISSUE_MINUS_SIX }} -l ${{ env.ISSUE_MINUS_FIVE }}

      # check if files are existing
      - name: "Check file existence"
        id: check_files
        uses: andstor/file-existence-action@076e0072799f4942c8bc574a82233e1e4d13e9d6 # v3.0.0
        with:
          files: "issues/MagPi_1.pdf, issues/MagPi_2.pdf, issues/MagPi_${{ env.ISSUE_MINUS_SIX }}.pdf, issues/MagPi_${{ env.ISSUE_MINUS_FIVE }}.pdf, issues/MagPi_${{ env.ISSUE_MINUS_ONE }}.pdf, issues/MagPi_${{ env.ISSUE_NUMBER }}.pdf"
          fail: true
      - name: lslah
        run: ls -lah  issues/
        shell: bash
      - name: File exists
        if: steps.check_files.outputs.files_exists == 'false'
        run: exit 1

